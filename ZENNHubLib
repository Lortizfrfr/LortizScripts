-- ZennLib | UI Library
-- Version: 1.4.1
-- Original Author: lortiz.frfr#0
-- Discord: discord.gg/aqMXx7NcvW
-- Converted to UI Library by Grok

local ZennLib = {}
ZennLib.__index = ZennLib

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local TextService = game:GetService("TextService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui", 5)
if not playerGui then
 warn("PlayerGui not found!")
 return
end

-- Default Configuration
local defaultConfig = {
 password = "ZENN",
 discordLink = "discord.gg/aqMXx7NcvW",
 version = "1.4.1",
 themeColor = Color3.fromRGB(213, 0, 255),
 uiScale = 1,
 cornerRadius = 10,
 animationSpeed = 0.3
}

-- Initialize ZennLib
function ZennLib.new(config)
 local self = setmetatable({}, ZennLib)
 self.config = setmetatable({}, {__index = defaultConfig})
 for k, v in pairs(config or {}) do
 self.config[k] = v
 end
 self.isAuthenticated = false
 self.isOpen = false
 self.notificationGui = nil
 self.mainGui = nil
 self.passwordScreen = nil
 self.toggleButton = nil
 self.frames = {}
 self.buttons = {}
 self.executeEnvironment = getfenv()
 self:setupAntiBan()
 self:optimizePerformance()
 self:setupUI()
 return self
end

-- Performance Optimization
function ZennLib:optimizePerformance()
 local lastUpdate = tick()
 RunService.RenderStepped:Connect(function()
 if tick() - lastUpdate > 0.1 then
 for _, gui in pairs(game:GetService("CoreGui"):GetChildren()) do
 if gui:IsA("ScreenGui") and gui.Name:find("ZENN") then
 gui.Visible = not gui.Visible
 end
 end
 lastUpdate = tick()
 end
 end)
end

-- Notification System
function ZennLib:createNotification(title, text, duration)
 if not self.notificationGui then
 self.notificationGui = Instance.new("ScreenGui")
 self.notificationGui.Name = "ZENN_NotificationGui"
 self.notificationGui.Parent = game:GetService("CoreGui")
 self.notificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
 self.notificationGui.ResetOnSpawn = false
 end

 local NotificationFrame = Instance.new("Frame")
 NotificationFrame.Name = "NotificationFrame"
 NotificationFrame.Parent = self.notificationGui
 NotificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 NotificationFrame.BorderSizePixel = 0
 NotificationFrame.Size = UDim2.new(0, 300, 0, 100)
 NotificationFrame.Position = UDim2.new(0.5, -150, 0, -120)
 NotificationFrame.ClipsDescendants = true

 local NotificationMainFrame = Instance.new("Frame")
 NotificationMainFrame.Name = "NotificationMainFrame"
 NotificationMainFrame.Parent = NotificationFrame
 NotificationMainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
 NotificationMainFrame.BackgroundColor3 = self.config.themeColor
 NotificationMainFrame.BorderSizePixel = 0
 NotificationMainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
 NotificationMainFrame.Size = UDim2.new(1, 0, 1, 0)

 local UIGradient = Instance.new("UIGradient")
 UIGradient.Rotation = -90
 UIGradient.Transparency = NumberSequence.new{
 NumberSequenceKeypoint.new(0, 0.7),
 NumberSequenceKeypoint.new(1, 1)
 }
 UIGradient.Parent = NotificationMainFrame

 local corner = Instance.new("UICorner")
 corner.CornerRadius = UDim.new(0, self.config.cornerRadius)
 corner.Parent = NotificationFrame

 local cornerMain = Instance.new("UICorner")
 cornerMain.CornerRadius = UDim.new(0, self.config.cornerRadius)
 cornerMain.Parent = NotificationMainFrame

 local NotificationTitle = Instance.new("TextLabel")
 NotificationTitle.Name = "NotificationTitle"
 NotificationTitle.Parent = NotificationMainFrame
 NotificationTitle.BackgroundTransparency = 1
 NotificationTitle.Position = UDim2.new(0.1, 0, 0.1, 0)
 NotificationTitle.Size = UDim2.new(0, 250, 0, 20)
 NotificationTitle.Font = Enum.Font.GothamBold
 NotificationTitle.Text = title or "Notification"
 NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
 NotificationTitle.TextSize = 16
 NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

 local NotificationText = Instance.new("TextLabel")
 NotificationText.Name = "NotificationText"
 NotificationText.Parent = NotificationMainFrame
 NotificationText.BackgroundTransparency = 0.7
 NotificationText.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 NotificationText.Position = UDim2.new(0.1, 0, 0.4, 0)
 NotificationText.Size = UDim2.new(0, 250, 0, 50)
 NotificationText.Font = Enum.Font.SourceSans
 NotificationText.Text = text or "This is a notification message."
 NotificationText.TextColor3 = Color3.fromRGB(255, 255, 255)
 NotificationText.TextSize =14
 NotificationText.TextWrapped = true
 NotificationText.TextXAlignment = Enum.TextXAlignment.Left
 NotificationText.TextYAlignment = Enum.TextYAlignment.Top

 local cornerText = Instance.new("UICorner")
 cornerText.CornerRadius = UDim.new(0, 5)
 cornerText.Parent = NotificationText

 local CloseButton = Instance.new("TextButton")
 CloseButton.Name = "CloseButton"
 CloseButton.Parent = NotificationMainFrame
 CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
 CloseButton.BackgroundTransparency = 0.5
 CloseButton.Position = UDim2.new(0.85, 0, 0.1, 0)
 CloseButton.Size = UDim2.new(0, 20, 0, 20)
 CloseButton.Font = Enum.Font.SourceSansBold
 CloseButton.Text = "X"
 CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 CloseButton.TextSize = 14
 local closeCorner = Instance.new("UICorner")
 closeCorner.CornerRadius = UDim.new(0, 6)
 closeCorner.Parent = CloseButton

 local tweenInfo = TweenInfo.new(self.config.animationSpeed, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out)
 local tween = TweenService:Create(NotificationFrame, tweenInfo, {Position = UDim2.new(0.5, -150, 0.1, 0)})
 tween:Play()

 self:makeDraggable(NotificationFrame)

 if duration and duration > 0 then
 task.delay(duration, function()
 local outTween = TweenService:Create(NotificationFrame, tweenInfo, {Position = UDim2.new(0.5, -150, 0, -120)})
 outTween:Play()
 outTween.Completed:Connect(function()
 NotificationFrame:Destroy()
 end)
 end)
 end

 CloseButton.MouseButton1Click:Connect(function()
 local outTween = TweenService:Create(NotificationFrame, tweenInfo, {Position = UDim2.new(0.5, -150, 0, -120)})
 outTween:Play()
 outTween.Completed:Connect(function()
 NotificationFrame:Destroy()
 end)
 end)
end

-- Dragging Functionality
function ZennLib:makeDraggable(frame)
 local dragging, dragStart, startPos
 frame.InputBegan:Connect(function(input)
 if input.UserInputType == Enum.UserInputType.MouseButton1 then
 dragging = true
 dragStart = input.Position
 startPos = frame.Position
 input.Changed:Connect(function()
 if input.UserInputState == Enum.UserInputState.End then
 dragging = false
 end
 end)
 end
 end)
 frame.InputChanged:Connect(function(input)
 if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
 local delta = input.Position - dragStart
 local screenSize = game:GetService("GuiService"):GetScreenResolution()
 local frameSize = frame.AbsoluteSize
 local newX = math.clamp(startPos.X.Offset + delta.X, 0, screenSize.X - frameSize.X)
 local newY = math.clamp(startPos.Y.Offset + delta.Y, 0, screenSize.Y - frameSize.Y)
 frame.Position = UDim2.new(startPos.X.Scale, newX, startPos.Y.Scale, newY)
 end
 end)
end

-- UI Setup
function ZennLib:setupUI()
 -- Main GUI
 self.mainGui = Instance.new("ScreenGui")
 self.mainGui.Name = "ZENN_UI"
 self.mainGui.Parent = game:GetService("CoreGui")
 self.mainGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
 self.mainGui.ResetOnSpawn = false

 -- Main Frame
 local ZENN = Instance.new("Frame")
 ZENN.Name = "ZENN"
 ZENN.Parent = self.mainGui
 ZENN.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ZENN.BorderSizePixel = 5
 ZENN.Position = UDim2.new(0.10, 0, 0.10, 0)
 ZENN.Size = UDim2.new(0, 348 * self.config.uiScale, 0, 193 * self.config.uiScale)
 ZENN.Visible = false
 self:makeDraggable(ZENN)

 local MainFrame = Instance.new("Frame")
 MainFrame.Name = "MainFrame"
 MainFrame.Parent = ZENN
 MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
 MainFrame.BackgroundColor3 = self.config.themeColor
 MainFrame.BorderSizePixel = 0
 MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
 MainFrame.Size = UDim2.new(1, 0, 1, 0)

 local UIGradient = Instance.new("UIGradient")
 UIGradient.Rotation = -121
 UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0.7), NumberSequenceKeypoint.new(1, 1)}
 UIGradient.Parent = MainFrame

 -- Toggle Button
 self.toggleButton = Instance.new("ImageButton")
 self.toggleButton.Name = "ToggleButton"
 self.toggleButton.Parent = self.mainGui
 self.toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 self.toggleButton.BackgroundTransparency = 0.8
 self.toggleButton.Position = UDim2.new(0.01, 0, 0.01, 0)
 self.toggleButton.Size = UDim2.new(0, 40, 0, 40)
 self.toggleButton.Image = "rbxthumb://type=Asset&id=6894017539&w=150&h=150"
 self:makeDraggable(self.toggleButton)
 self.toggleButton.MouseButton1Click:Connect(function() self:animatePopup() end)

 -- Title
 local Title = Instance.new("TextLabel")
 Title.Name = "Title"
 Title.Parent = MainFrame
 Title.BackgroundTransparency = 1
 Title.Position = UDim2.new(0.1, 0, 0.03, 0)
 Title.Size = UDim2.new(0, 303 * self.config.uiScale, 0, 18)
 Title.Font = Enum.Font.GothamBold
 Title.Text = "ZENN"
 Title.TextColor3 = Color3.fromRGB(255, 255, 255)
 Title.TextSize = 17
 Title.TextXAlignment = Enum.TextXAlignment.Left

 local Public = Instance.new("ImageLabel")
 Public.Name = "Icon"
 Public.Parent = Title
 Public.BackgroundTransparency = 1
 Public.Position = UDim2.new(-0.08, 0, 0.03, 0)
 Public.Size = UDim2.new(0, 19, 0, 17)
 Public.Image = "rbxthumb://type=Asset&id=139675652925238&w=150&h=150"

 -- Password Screen
 self.passwordScreen = Instance.new("Frame")
 self.passwordScreen.Name = "PasswordScreen"
 self.passwordScreen.Parent = self.mainGui
 self.passwordScreen.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 self.passwordScreen.BorderSizePixel = 0
 self.passwordScreen.Position = UDim2.new(0.15, 140, 0.15, 94)
 self.passwordScreen.Size = UDim2.new(0, 250 * self.config.uiScale, 0, 150 * self.config.uiScale)
 self.passwordScreen.Visible = true

 local PasswordMainFrame = Instance.new("Frame")
 PasswordMainFrame.Name = "PasswordMainFrame"
 PasswordMainFrame.Parent = self.passwordScreen
 PasswordMainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
 PasswordMainFrame.BackgroundColor3 = self.config.themeColor
 PasswordMainFrame.BorderSizePixel = 0
 PasswordMainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
 PasswordMainFrame.Size = UDim2.new(1, 0, 1, 0)

 local UIGradient_Password = Instance.new("UIGradient")
 UIGradient_Password.Rotation = -90
 UIGradient_Password.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0.7), NumberSequenceKeypoint.new(1, 1)}
 UIGradient_Password.Parent = PasswordMainFrame

 local PasswordTitle = Instance.new("TextLabel")
 PasswordTitle.Name = "PasswordTitle"
 PasswordTitle.Parent = PasswordMainFrame
 PasswordTitle.BackgroundTransparency = 1
 PasswordTitle.Position = UDim2.new(0.1, 0, 0.1, 0)
 PasswordTitle.Size = UDim2.new(0, 200 * self.config.uiScale, 0, 20)
 PasswordTitle.Font = Enum.Font.GothamBold
 PasswordTitle.Text = "ZENN | Enter key"
 PasswordTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
 PasswordTitle.TextSize = 16
 PasswordTitle.TextXAlignment = Enum.TextXAlignment.Left

 local PasswordInput = Instance.new("TextBox")
 PasswordInput.Name = "PasswordInput"
 PasswordInput.Parent = PasswordMainFrame
 PasswordInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 PasswordInput.BackgroundTransparency = 0.5
 PasswordInput.Position = UDim2.new(0.14, 0, 0.3, 0)
 PasswordInput.Size = UDim2.new(0, 180 * self.config.uiScale, 0, 30)
 PasswordInput.Font = Enum.Font.SourceSans
 PasswordInput.Text = "Enter key ..."
 PasswordInput.PlaceholderText = "Enter key ..."
 PasswordInput.PlaceholderColor3 = Color3.fromRGB(166, 166, 166)
 PasswordInput.TextColor3 = Color3.fromRGB(255, 255, 255)
 PasswordInput.TextSize = 14
 PasswordInput.ClearTextOnFocus = true

 local SubmitButton = Instance.new("TextButton")
 SubmitButton.Name = "SubmitButton"
 SubmitButton.Parent = PasswordMainFrame
 SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 SubmitButton.BackgroundTransparency = 0.5
 SubmitButton.Position = UDim2.new(0.33, 0, 0.55, 0)
 SubmitButton.Size = UDim2.new(0, 80 * self.config.uiScale, 0, 25)
 SubmitButton.Font = Enum.Font.SourceSans
 SubmitButton.Text = "Submit"
 SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 SubmitButton.TextSize = 14

 local GetLinkButton = Instance.new("TextButton")
 GetLinkButton.Name = "GetLinkButton"
 GetLinkButton.Parent = PasswordMainFrame
 GetLinkButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 GetLinkButton.BackgroundTransparency = 0.5
 GetLinkButton.Position = UDim2.new(0.33, 0, 0.75, 0)
 GetLinkButton.Size = UDim2.new(0, 80 * self.config.uiScale, 0, 25)
 GetLinkButton.Font = Enum.Font.SourceSans
 GetLinkButton.Text = "Get key"
 GetLinkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 GetLinkButton.TextSize = 14

 GetLinkButton.MouseButton1Click:Connect(function()
 local success, err = pcall(function()
 setclipboard(self.config.discordLink)
 GetLinkButton.Text = "Link copied!"
 wait(1)
 GetLinkButton.Text = "Get key"
 end)
 if success then
 self:createNotification("ZENN | Success", "Discord link copied to clipboard!", 3)
 else
 self:createNotification("ZENN | Error", "Failed to copy link to clipboard. Please copy manually: " .. self.config.discordLink, 5)
 warn("Clipboard set failed: " .. tostring(err))
 end
 end)

 SubmitButton.MouseButton1Click:Connect(function()
 if PasswordInput.Text == self.config.password then
 self.isAuthenticated = true
 local tweenInfo = TweenInfo.new(self.config.animationSpeed, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out)
 local tween = TweenService:Create(self.passwordScreen, tweenInfo, {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)})
 tween:Play()
 tween.Completed:Connect(function()
 self.passwordScreen.Visible = false
 ZENN.Visible = false
 end)
 self:createNotification("ZENN | Success", "Access granted! Enjoy ZENN", 3)
 else
 self:createNotification("ZENN | Error", "Incorrect password! Join the discord for official key.", 3)
 PasswordInput.Text = "Enter key ..."
 end
 end)

 -- Options Menu
 local PageMenu = Instance.new("ScrollingFrame")
 PageMenu.Name = "Options"
 PageMenu.Parent = MainFrame
 PageMenu.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 PageMenu.BackgroundTransparency = 0.7
 PageMenu.Position = UDim2.new(0.03, 0, 0.16, 0)
 PageMenu.Size = UDim2.new(0, 75 * self.config.uiScale, 0, 140 * self.config.uiScale)
 PageMenu.CanvasSize = UDim2.new(0, 0, 0, 0)
 PageMenu.ScrollBarThickness = 2
 PageMenu.ScrollingDirection = Enum.ScrollingDirection.Y
 PageMenu.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

 local UIGradient_PageMenu = Instance.new("UIGradient")
 UIGradient_PageMenu.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))}
 UIGradient_PageMenu.Rotation = -90
 UIGradient_PageMenu.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0.7), NumberSequenceKeypoint.new(1, 1)}
 UIGradient_PageMenu.Parent = PageMenu

 -- Frames
 self.frames.Home = self:createFrame(MainFrame, "Home", true)
 self.frames.Executer = self:createFrame(MainFrame, "Executer", false)
 self.frames.ScriptHub = self:createFrame(MainFrame, "ScriptHub", false)
 self.frames.Info = self:createFrame(MainFrame, "Info", false)
 self.frames.GameInfo = self:createFrame(MainFrame, "GameInfo", false)
 self.frames.Settings = self:createFrame(MainFrame, "Settings", false)
 self.frames.Deobfuscator = self:createFrame(MainFrame, "Deobfuscator", false)

 -- Navigation Buttons
 local buttonHeight = 20
 local buttonCount = 0
 local function createButton(name, text, callback)
 buttonCount = buttonCount + 1
 local posY = (buttonCount - 1) * buttonHeight
 local button = Instance.new("TextButton")
 button.Name = name
 button.Parent = PageMenu
 button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 button.BackgroundTransparency = 0.5
 button.Position = UDim2.new(0.03, 0, 0, posY)
 button.Size = UDim2.new(0, 68 * self.config.uiScale, 0, 16)
 button.Font = Enum.Font.SourceSans
 button.Text = text
 button.TextColor3 = Color3.fromRGB(255, 255, 255)
 button.TextSize = 14
 button.ZIndex = 2
 local corner = Instance.new("UICorner")
 corner.CornerRadius = UDim.new(0, 5)
 corner.Parent = button
 button.MouseButton1Click:Connect(callback)
 PageMenu.CanvasSize = UDim2.new(0, 0, 0, buttonCount * buttonHeight)
 self.buttons[name] = button
 return button
 end

 createButton("HomePageButton", "Home", function() self:toggleFrame("Home") end)
 createButton("ExecutorPageButton", "Executor", function() self:toggleFrame("Executer") end)
 createButton("ScriptMenuButton", "Script Hub", function() self:toggleFrame("ScriptHub") end)
 createButton("GameInfoPageButton", "Game Info", function() self:toggleFrame("GameInfo") end)
 createButton("SettingsPageButton", "Settings", function() self:toggleFrame("Settings") end)
 createButton("InfoPageButton", "Info", function() self:toggleFrame("Info") end)
 createButton("DeobfuscatorPageButton", "Deobfuscator", function() self:toggleFrame("Deobfuscator") end)

 -- Setup Pages
 self:setupHome()
 self:setupExecutor()
 self:setupScriptHub()
 self:setupGameInfo()
 self:setupInfo()
 self:setupSettings()
 self:setupDeobfuscator()

 -- Apply UICorners
 self:applyUICorners()

 -- Color Animation
 local hue = 0
 RunService.RenderStepped:Connect(function()
 hue = (hue + 0.005) % 1
 local r, g, b = self:HSVToRGB(hue, 1, 1)
 MainFrame.BackgroundColor3 = Color3.new(r, g, b)
 PasswordMainFrame.BackgroundColor3 = Color3.new(r, g, b)
 for _, notification in pairs(self.notificationGui:GetChildren()) do
 if notification:IsA("Frame") and notification:FindFirstChild("NotificationMainFrame") then
 notification.NotificationMainFrame.BackgroundColor3 = Color3.new(r, g, b)
 end
 end
 end)

 -- Initial Notification
 self:createNotification("ZENN | Official", "Made by Lortiz.frfr#0 | " .. self.config.discordLink, 5)
end

-- Create Frame
function ZennLib:createFrame(parent, name, visible)
 local frame = Instance.new("Frame")
 frame.Name = name
 frame.Parent = parent
 frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 frame.Position = UDim2.new(0.28, 0, 0.16, 0)
 frame.Size = UDim2.new(0, 242 * self.config.uiScale, 0, 140 * self.config.uiScale)
 frame.Visible = visible
 local UIGradient = Instance.new("UIGradient")
 UIGradient.Rotation = -90
 UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0.7), NumberSequenceKeypoint.new(1, 1)}
 UIGradient.Parent = frame
 return frame
end

-- Toggle Frame
function ZennLib:toggleFrame(frameName)
 for name, frame in pairs(self.frames) do
 frame.Visible = (name == frameName)
 end
end

-- Home Page
function ZennLib:setupHome()
 local Home = self.frames.Home
 local welcome = Instance.new("TextLabel")
 welcome.Name = "welcome"
 welcome.Parent = Home
 welcome.BackgroundTransparency = 0.9
 welcome.BackgroundColor3 = Color3.fromRGB(14, 14, 14)
 welcome.Position = UDim2.new(0.10, 0, 0.02, 0)
 welcome.Size = UDim2.new(0, 175 * self.config.uiScale, 0, 18)
 welcome.Font = Enum.Font.Gotham
 welcome.Text = "Welcome, " .. player.Name .. " to ZENN!"
 welcome.TextColor3 = Color3.fromRGB(255, 255, 255)
 welcome.TextSize = 15
 welcome.TextStrokeTransparency = 0
 welcome.TextScaled = true
 welcome.TextWrapped = true
 welcome.TextXAlignment = Enum.TextXAlignment.Right

 local UnderlineFrame = Instance.new("Frame")
 UnderlineFrame.Name = "UnderlineFrame"
 UnderlineFrame.Parent = Home
 UnderlineFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 UnderlineFrame.Position = UDim2.new(0.06, 0, 0.15, 0)
 UnderlineFrame.Size = UDim2.new(0, 200 * self.config.uiScale, 0, 1)
 UnderlineFrame.BorderSizePixel = 0

 local DiscordLabel = Instance.new("TextLabel")
 DiscordLabel.Name = "DiscordLabel"
 DiscordLabel.Parent = Home
 DiscordLabel.BackgroundTransparency = 1
 DiscordLabel.Position = UDim2.new(0.1, 5, 0.20, 0)
 DiscordLabel.Size = UDim2.new(0, 178 * self.config.uiScale, 0, 13)
 DiscordLabel.Font = Enum.Font.SourceSans
 DiscordLabel.Text = self.config.discordLink
 DiscordLabel.TextColor3 = Color3.fromRGB(166, 166, 166)
 DiscordLabel.TextSize = 14
 DiscordLabel.TextXAlignment = Enum.TextXAlignment.Left

 local MadeByLabel = Instance.new("TextLabel")
 MadeByLabel.Name = "MadeByLabel"
 MadeByLabel.Parent = Home
 MadeByLabel.BackgroundTransparency = 1
 MadeByLabel.Position = UDim2.new(0.1, 5, 0.32, 0)
 MadeByLabel.Size = UDim2.new(0, 178 * self.config.uiScale, 0, 13)
 MadeByLabel.Font = Enum.Font.SourceSans
 MadeByLabel.Text = "Made & Owned by lortiz.frfr#0"
 MadeByLabel.TextColor3 = Color3.fromRGB(166, 166, 166)
 MadeByLabel.TextSize = 14
 MadeByLabel.TextXAlignment = Enum.TextXAlignment.Left

 local TwitterXUser = Instance.new("TextLabel")
 TwitterXUser.Name = "TwitterXUser"
 TwitterXUser.Parent = Home
 TwitterXUser.BackgroundTransparency = 1
 TwitterXUser.Position = UDim2.new(0.1, 5, 0.43, 0)
 TwitterXUser.Size = UDim2.new(0, 178 * self.config.uiScale, 0, 13)
 TwitterXUser.Font = Enum.Font.SourceSans
 TwitterXUser.Text = "x.com/@Lortizfrfr"
 TwitterXUser.TextColor3 = Color3.fromRGB(166, 166, 166)
 TwitterXUser.TextSize = 14
 TwitterXUser.TextXAlignment = Enum.TextXAlignment.Left

 local DiscordIcon = Instance.new("ImageLabel")
 DiscordIcon.Name = "Icon"
 DiscordIcon.Parent = Home
 DiscordIcon.BackgroundTransparency = 1
 DiscordIcon.Position = UDim2.new(0.03, 0, 0.20, 0)
 DiscordIcon.Size = UDim2.new(0, 15, 0, 15)
 DiscordIcon.Image = "rbxthumb://type=Asset&id=18505728250&w=150&h=150"

 local HammerIcon = Instance.new("ImageLabel")
 HammerIcon.Name = "Icon"
 HammerIcon.Parent = Home
 HammerIcon.BackgroundTransparency = 1
 HammerIcon.Position = UDim2.new(0.03, 0, 0.32, 0)
 HammerIcon.Size = UDim2.new(0, 15, 0, 15)
 HammerIcon.Image = "rbxthumb://type=Asset&id=84958753400165&w=150&h=150"

 local TwitterXIcon = Instance.new("ImageLabel")
 TwitterXIcon.Name = "TwitterXIcon"
 TwitterXIcon.Parent = Home
 TwitterXIcon.BackgroundTransparency = 1
 TwitterXIcon.Position = UDim2.new(0.03, 0, 0.43, 0)
 TwitterXIcon.Size = UDim2.new(0, 15, 0, 15)
 TwitterXIcon.Image = "rbxthumb://type=Asset&id=18355603511&w=150&h=150"

 local DateLabel = Instance.new("TextLabel")
 DateLabel.Name = "DateLabel"
 DateLabel.Parent = Home
 DateLabel.BackgroundTransparency = 1
 DateLabel.Position = UDim2.new(0.03, 0, 0.85, 0)
 DateLabel.Size = UDim2.new(0, 106 * self.config.uiScale, 0, 12)
 DateLabel.Font = Enum.Font.SourceSans
 DateLabel.Text = os.date("%B %d, %Y")
 DateLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 DateLabel.TextSize = 15
 DateLabel.TextXAlignment = Enum.TextXAlignment.Left

 spawn(function()
 while true do
 DateLabel.Text = os.date("%B %d, %Y")
 task.wait(1)
 end
 end)
end

-- Executor Page
function ZennLib:setupExecutor()
 local Executer = self.frames.Executer
 local EditorFrame = Instance.new("ScrollingFrame")
 EditorFrame.Name = "EditorFrame"
 EditorFrame.Parent = Executer
 EditorFrame.BackgroundTransparency = 1
 EditorFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
 EditorFrame.Size = UDim2.new(0.9, 0, 0.6, 0)
 EditorFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
 EditorFrame.ScrollBarThickness = 5

 local Lines = Instance.new("TextLabel")
 Lines.Name = "Lines"
 Lines.Parent = EditorFrame
 Lines.BackgroundTransparency = 1
 Lines.Size = UDim2.new(0, 30, 1, 0)
 Lines.Font = Enum.Font.Code
 Lines.Text = "1"
 Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
 Lines.TextSize = 12
 Lines.TextYAlignment = Enum.TextYAlignment.Top

 local Source = Instance.new("TextBox")
 Source.Name = "Source"
 Source.Parent = EditorFrame
 Source.BackgroundTransparency = 0.8
 Source.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
 Source.Position = UDim2.new(0, 30, 0, 0)
 Source.Size = UDim2.new(1, -30, 1, 0)
 Source.Font = Enum.Font.Code
 Source.Text = "-- Paste Script Here"
 Source.TextColor3 = Color3.fromRGB(204, 204, 204)
 Source.TextSize = 12
 Source.TextXAlignment = Enum.TextXAlignment.Left
 Source.TextYAlignment = Enum.TextYAlignment.Top
 Source.MultiLine = true
 Source.ClearTextOnFocus = false

 Source:GetPropertyChangedSignal("Text"):Connect(function()
 EditorFrame.CanvasSize = UDim2.new(0, 0, 0, Source.TextBounds.Y + 20)
 end)

 local Comments_ = self:createHighlight(Source, "Comments_", Color3.fromRGB(59, 200, 59))
 local Globals_ = self:createHighlight(Source, "Globals_", Color3.fromRGB(132, 214, 247))
 local Keywords_ = self:createHighlight(Source, "Keywords_", Color3.fromRGB(248, 109, 124))
 local RemoteHighlight_ = self:createHighlight(Source, "RemoteHighlight_", Color3.fromRGB(0, 144, 255))
 local Strings_ = self:createHighlight(Source, "Strings_", Color3.fromRGB(173, 241, 149))
 local Tokens_ = self:createHighlight(Source, "Tokens_", Color3.fromRGB(255, 255, 255))
 local Numbers_ = self:createHighlight(Source, "Numbers_", Color3.fromRGB(255, 198, 0))

 local lastUpdate = 0
 local debounceTime = 0.3
 Source:GetPropertyChangedSignal("Text"):Connect(function()
 local now = tick()
 if now - lastUpdate >= debounceTime then
 self:highlightSource(Source, Lines, Comments_, Globals_, Keywords_, RemoteHighlight_, Strings_, Tokens_, Numbers_)
 lastUpdate = now
 end
 end)

 local Execute = Instance.new("TextButton")
 Execute.Name = "Execute"
 Execute.Parent = Executer
 Execute.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 Execute.BackgroundTransparency = 0.5
 Execute.Position = UDim2.new(0.05, 0, 0.75, 0)
 Execute.Size = UDim2.new(0, 59 * self.config.uiScale, 0, 18)
 Execute.Font = Enum.Font.SourceSans
 Execute.Text = "Execute"
 Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
 Execute.TextSize = 16
 self.buttons.Execute = Execute

 local Clear = Instance.new("TextButton")
 Clear.Name = "Clear"
 Clear.Parent = Executer
 Clear.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 Clear.BackgroundTransparency = 0.5
 Clear.Position = UDim2.new(0.32, 0, 0.75, 0)
 Clear.Size = UDim2.new(0, 47 * self.config.uiScale, 0, 18)
 Clear.Font = Enum.Font.SourceSans
 Clear.Text = "Clear"
 Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
 Clear.TextSize = 16
 self.buttons.Clear = Clear

 local ResetButton = Instance.new("TextButton")
 ResetButton.Name = "ResetButton"
 ResetButton.Parent = Executer
 ResetButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ResetButton.BackgroundTransparency = 0.5
 ResetButton.Position = UDim2.new(0.58, 0, 0.75, 0)
 ResetButton.Size = UDim2.new(0, 29 * self.config.uiScale, 0, 18)
 ResetButton.Font = Enum.Font.SourceSans
 ResetButton.Text = "RE"
 ResetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 ResetButton.TextSize = 16
 self.buttons.ResetButton = ResetButton

 Execute.MouseButton1Click:Connect(function()
 local code = Source.Text
 if not code or code == "" then
 warn("No code to execute!")
 return
 end
 if not loadstring then
 warn("Execution failed: loadstring not available!")
 return
 end
 local success, result = pcall(function()
 local func = loadstring(code)
 if func then
 setfenv(func, self.executeEnvironment)
 return func()
 else
 error("Failed to compile script!")
 end
 end)
 if success then
 print("Script executed successfully!")
 else
 warn("Execution Error: " .. tostring(result))
 end
 end)

 Clear.MouseButton1Click:Connect(function()
 Source.Text = ""
 end)

 ResetButton.MouseButton1Click:Connect(function()
 Source.Text = "-- Paste Script Here"
 end)

 self:highlightSource(Source, Lines, Comments_, Globals_, Keywords_, RemoteHighlight_, Strings_, Tokens_, Numbers_)
end

-- Script Hub Page
function ZennLib:setupScriptHub()
 local ScriptHub = self.frames.ScriptHub
 local ScrollingFrame = Instance.new("ScrollingFrame")
 ScrollingFrame.Parent = ScriptHub
 ScrollingFrame.BackgroundTransparency = 0.8
 ScrollingFrame.Position = UDim2.new(0.07, 0, 0.04, 0)
 ScrollingFrame.Size = UDim2.new(0, 207 * self.config.uiScale, 0, 100 * self.config.uiScale)
 ScrollingFrame.CanvasSize = UDim2.new(0, 0, 3.70, 0)
 ScrollingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ScrollingFrame.Name = "ScriptsScroll"

 local TextLabel = Instance.new("TextLabel")
 TextLabel.Parent = ScriptHub
 TextLabel.BackgroundTransparency = 0.6
 TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 TextLabel.BorderSizePixel = 2
 TextLabel.Position = UDim2.new(0.07, 0, 0.81, 0)
 TextLabel.Size = UDim2.new(0, 207 * self.config.uiScale, 0, 19)
 TextLabel.Font = Enum.Font.SourceSans
 TextLabel.Text = "Following scripts are not made by us."
 TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 TextLabel.TextSize = 14

 -- Add one script button
 self:addScriptButton("BlackHole", 0, BlackHoleLua, "Black Hole Script - Creates a black hole effect", true)
end

-- Add Script Button
function ZennLib:addScriptButton(name, posY, scriptSource, description, isRawCode)
 local ScrollingFrame = self.frames.ScriptHub:FindFirstChild("ScriptsScroll")
 local button = Instance.new("TextButton")
 button.Size = UDim2.new(0, 0, 0, 20)
 button.Position = UDim2.new(0.03, 0, 0, posY)
 button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 button.BorderSizePixel = 0
 button.Text = "> " .. name
 button.TextColor3 = Color3.fromRGB(255, 255, 255)
 button.Font = Enum.Font.SourceSans
 button.TextSize = 14
 button.TextXAlignment = Enum.TextXAlignment.Left
 button.Parent = ScrollingFrame

 local corner = Instance.new("UICorner")
 corner.CornerRadius = UDim.new(0, 5)
 corner.Parent = button

 button.MouseButton1Click:Connect(function()
 self:createNotification(name, description, 5)
 local success, err = pcall(function()
 if isRawCode then
 local func = loadstring(scriptSource)
 if func then
 return func()
 else
 error("Failed to compile raw code")
 end
 else
 loadstring(game:HttpGet(scriptSource))()
 end
 end)
 button.Text = success and "> Executed" or "> Error"
 if not success then
 warn(name .. " failed: " .. err)
 self:createNotification("ZENN | Error", "This script is no longer working.\nContact us if you think its a UI error", 5)
 end
 task.wait(1.5)
 button.Text = "> " .. name
 end)

 local ti = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
 TweenService:Create(button, ti, {Size = UDim2.new(0.9, 0, 0, 17)}):Play()
end

-- Game Info Page
function ZennLib:setupGameInfo()
 local GameInfo = self.frames.GameInfo
 local startTime, joinTime = os.time(), os.time()
 local FPSLabel = Instance.new("TextLabel")
 FPSLabel.Parent = GameInfo
 FPSLabel.BackgroundTransparency = 0.5
 FPSLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 FPSLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
 FPSLabel.Size = UDim2.new(0, 100 * self.config.uiScale, 0, 20)
 FPSLabel.Font = Enum.Font.SourceSans
 FPSLabel.Text = "> FPS: Calculating..."
 FPSLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 FPSLabel.TextSize = 14

 local PingLabel = Instance.new("TextLabel")
 PingLabel.Parent = GameInfo
 PingLabel.BackgroundTransparency = 0.5
 PingLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 PingLabel.Position = UDim2.new(0.05, 0, 0.20, 0)
 PingLabel.Size = UDim2.new(0, 100 * self.config.uiScale, 0, 20)
 PingLabel.Font = Enum.Font.SourceSans
 PingLabel.Text = "> Ping: Calculating..."
 PingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 PingLabel.TextSize = 14

 local PlayerCountLabel = Instance.new("TextLabel")
 PlayerCountLabel.Parent = GameInfo
 PlayerCountLabel.BackgroundTransparency = 0.5
 PlayerCountLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 PlayerCountLabel.Position = UDim2.new(0.05, 0, 0.35, 0)
 PlayerCountLabel.Size = UDim2.new(0, 100 * self.config.uiScale, 0, 20)
 PlayerCountLabel.Font = Enum.Font.SourceSans
 PlayerCountLabel.Text = "> Players: Calculating..."
 PlayerCountLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 PlayerCountLabel.TextSize = 14

 local UptimeLabel = Instance.new("TextLabel")
 UptimeLabel.Parent = GameInfo
 UptimeLabel.BackgroundTransparency = 0.5
 UptimeLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 UptimeLabel.Position = UDim2.new(0.05, 0, 0.50, 0)
 UptimeLabel.Size = UDim2.new(0, 100 * self.config.uiScale, 0, 20)
 UptimeLabel.Font = Enum.Font.SourceSans
 UptimeLabel.Text = "> Uptime: Calculating..."
 UptimeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 UptimeLabel.TextSize = 14

 local PlaytimeLabel = Instance.new("TextLabel")
 PlaytimeLabel.Parent = GameInfo
 PlaytimeLabel.BackgroundTransparency = 0.5
 PlaytimeLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 PlaytimeLabel.Position = UDim2.new(0.05, 0, 0.65, 0)
 PlaytimeLabel.Size = UDim2.new(0, 100 * self.config.uiScale, 0, 20)
 PlaytimeLabel.Font = Enum.Font.SourceSans
 PlaytimeLabel.Text = "> Playtime: Calculating..."
 PlaytimeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
 PlaytimeLabel.TextSize = 14

 local frameCount, lastTime = 0, tick()
 RunService.RenderStepped:Connect(function()
 frameCount = frameCount + 1
 local currentTime = tick()
 if currentTime - lastTime >= 0.5 then
 FPSLabel.Text = "> FPS: " .. math.floor(frameCount / (currentTime - lastTime) + 0.5)
 frameCount = 0
 lastTime = currentTime
 end
 end)

 spawn(function()
 while task.wait(1) do
 pcall(function()
 PingLabel.Text = "> Ping: " .. math.floor(player:GetNetworkPing() * 1000 + 0.5) .. " ms"
 PlayerCountLabel.Text = "> Players: " .. #Players:GetPlayers() .. "/" .. Players.MaxPlayers
 UptimeLabel.Text = "> Uptime: " .. self:formatTime(os.time() - startTime)
 PlaytimeLabel.Text = "> Playtime: " .. self:formatTime(os.time() - joinTime)
 end)
 end
 end)
end

-- Info Page
function ZennLib:setupInfo()
 local Info = self.frames.Info
 -- Add Info page content here if needed
end

-- Settings Page
function ZennLib:setupSettings()
 local Settings = self.frames.Settings
 local CONFIG = {
 WALKSPEED = 16,
 JUMPPOWER = 50,
 FOV = 70,
 GRAVITY = 196.2,
 METHOD = "Humanoid"
 }
 local isBypassActive = false
 local bodyVelocity, linearVelocity, rocketPropulsion, forceField

 local function initializeMovementInstances(character, method)
 local rootPart = character:FindFirstChild("HumanoidRootPart")
 if not rootPart then return end
 if method == "BodyVelocity" then
 bodyVelocity = Instance.new("BodyVelocity")
 bodyVelocity.MaxForce = Vector3.new(math.huge, 0, math.huge)
 bodyVelocity.Parent = rootPart
 elseif method == "LinearVelocity" then
 linearVelocity = Instance.new("LinearVelocity")
 linearVelocity.MaxForce = Vector3.new(math.huge, 0, math.huge)
 linearVelocity.Parent = rootPart
 elseif method == "RocketPropulsion" then
 rocketPropulsion = Instance.new("RocketPropulsion")
 rocketPropulsion.MaxSpeed = CONFIG.WALKSPEED
 rocketPropulsion.Parent = rootPart
 elseif method == "ForceFieldVelocity" then
 forceField = Instance.new("ForceField")
 forceField.Parent = character
 end
 end

 local function applyMovement(character)
 local humanoid = character:FindFirstChild("Humanoid")
 local rootPart = character:FindFirstChild("HumanoidRootPart")
 if not humanoid or not rootPart then return end
 if CONFIG.METHOD == "Humanoid" then
 humanoid.WalkSpeed = CONFIG.WALKSPEED
 humanoid.JumpPower = CONFIG.JUMPPOWER
 elseif CONFIG.METHOD == "BodyVelocity" and bodyVelocity then
 bodyVelocity.Velocity = rootPart.Velocity.Unit * CONFIG.WALKSPEED
 elseif CONFIG.METHOD == "LinearVelocity" and linearVelocity then
 linearVelocity.VectorVelocity = rootPart.Velocity.Unit * CONFIG.WALKSPEED
 elseif CONFIG.METHOD == "CFrame" then
 rootPart.CFrame = rootPart.CFrame + rootPart.Velocity.Unit * CONFIG.WALKSPEED / 60
 elseif CONFIG.METHOD == "RocketPropulsion" and rocketPropulsion then
 rocketPropulsion.Target = rootPart
 rocketPropulsion:Fire()
 elseif CONFIG.METHOD == "ForceFieldVelocity" and forceField then
 rootPart.Velocity = rootPart.Velocity.Unit * CONFIG.WALKSPEED
 end
 workspace.CurrentCamera.FieldOfView = CONFIG.FOV
 workspace.Gravity = CONFIG.GRAVITY
 end

 local function startEnforcement()
 RunService.Heartbeat:Connect(function()
 if isBypassActive and player.Character then
 applyMovement(player.Character)
 end
 end)
 end

 local WalkSpeedInput = Instance.new("TextBox")
 WalkSpeedInput.Name = "WalkSpeedInput"
 WalkSpeedInput.Parent = Settings
 WalkSpeedInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 WalkSpeedInput.BackgroundTransparency = 0.5
 WalkSpeedInput.Position = UDim2.new(0.05, 0, 0.05, 0)
 WalkSpeedInput.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 WalkSpeedInput.Font = Enum.Font.SourceSans
 WalkSpeedInput.Text = "16"
 WalkSpeedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
 WalkSpeedInput.TextSize = 14
 self.buttons.WalkSpeedInput = WalkSpeedInput

 local JumpPowerInput = Instance.new("TextBox")
 JumpPowerInput.Name = "JumpPowerInput"
 JumpPowerInput.Parent = Settings
 JumpPowerInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 JumpPowerInput.BackgroundTransparency = 0.5
 JumpPowerInput.Position = UDim2.new(0.05, 0, 0.20, 0)
 JumpPowerInput.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 JumpPowerInput.Font = Enum.Font.SourceSans
 JumpPowerInput.Text = "50"
 JumpPowerInput.TextColor3 = Color3.fromRGB(255, 255, 255)
 JumpPowerInput.TextSize = 14
 self.buttons.JumpPowerInput = JumpPowerInput

 local FOVInput = Instance.new("TextBox")
 FOVInput.Name = "FOVInput"
 FOVInput.Parent = Settings
 FOVInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 FOVInput.BackgroundTransparency = 0.5
 FOVInput.Position = UDim2.new(0.05, 0, 0.35, 0)
 FOVInput.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 FOVInput.Font = Enum.Font.SourceSans
 FOVInput.Text = "70"
 FOVInput.TextColor3 = Color3.fromRGB(255, 255, 255)
 FOVInput.TextSize = 14
 self.buttons.FOVInput = FOVInput

 local GravityInput = Instance.new("TextBox")
 GravityInput.Name = "GravityInput"
 GravityInput.Parent = Settings
 GravityInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 GravityInput.BackgroundTransparency = 0.5
 GravityInput.Position = UDim2.new(0.05, 0, 0.50, 0)
 GravityInput.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 GravityInput.Font = Enum.Font.SourceSans
 GravityInput.Text = "196.2"
 GravityInput.TextColor3 = Color3.fromRGB(255, 255, 255)
 GravityInput.TextSize = 14
 self.buttons.GravityInput = GravityInput

 local ApplyButton = Instance.new("TextButton")
 ApplyButton.Name = "ApplyButton"
 ApplyButton.Parent = Settings
 ApplyButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ApplyButton.BackgroundTransparency = 0.5
 ApplyButton.Position = UDim2.new(0.35, 0, 0.05, 0)
 ApplyButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 ApplyButton.Font = Enum.Font.SourceSans
 ApplyButton.Text = "Apply"
 ApplyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 ApplyButton.TextSize = 14
 self.buttons.ApplyButton = ApplyButton

 local ResetButton_2 = Instance.new("TextButton")
 ResetButton_2.Name = "ResetButton_2"
 ResetButton_2.Parent = Settings
 ResetButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ResetButton_2.BackgroundTransparency = 0.5
 ResetButton_2.Position = UDim2.new(0.35, 0, 0.20, 0)
 ResetButton_2.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 ResetButton_2.Font = Enum.Font.SourceSans
 ResetButton_2.Text = "Reset"
 ResetButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
 ResetButton_2.TextSize = 14
 self.buttons.ResetButton_2 = ResetButton_2

 local MethodButton = Instance.new("TextButton")
 MethodButton.Name = "MethodButton"
 MethodButton.Parent = Settings
 MethodButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 MethodButton.BackgroundTransparency = 0.5
 MethodButton.Position = UDim2.new(0.35, 0, 0.35, 0)
 MethodButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 MethodButton.Font = Enum.Font.SourceSans
 MethodButton.Text = "Method: " .. CONFIG.METHOD
 MethodButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 MethodButton.TextSize = 14
 self.buttons.MethodButton = MethodButton

 local DetectAntiCheatButton = Instance.new("TextButton")
 DetectAntiCheatButton.Name = "DetectAntiCheatButton"
 DetectAntiCheatButton.Parent = Settings
 DetectAntiCheatButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 DetectAntiCheatButton.BackgroundTransparency = 0.5
 DetectAntiCheatButton.Position = UDim2.new(0.35, 0, 0.50, 0)
 DetectAntiCheatButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 DetectAntiCheatButton.Font = Enum.Font.SourceSans
 DetectAntiCheatButton.Text = "Detect AC"
 DetectAntiCheatButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 DetectAntiCheatButton.TextSize = 14
 self.buttons.DetectAntiCheatButton = DetectAntiCheatButton

 local ESPButton = Instance.new("TextButton")
 ESPButton.Name = "ESPButton"
 ESPButton.Parent = Settings
 ESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ESPButton.BackgroundTransparency = 0.5
 ESPButton.Position = UDim2.new(0.35, 0, 0.65, 0)
 ESPButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 ESPButton.Font = Enum.Font.SourceSans
 ESPButton.Text = "ESP"
 ESPButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 ESPButton.TextSize = 14
 self.buttons.ESPButton = ESPButton

 local NoclipButton = Instance.new("TextButton")
 NoclipButton.Name = "NoclipButton"
 NoclipButton.Parent = Settings
 NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 NoclipButton.BackgroundTransparency = 0.5
 NoclipButton.Position = UDim2.new(0.35, 0, 0.80, 0)
 NoclipButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 NoclipButton.Font = Enum.Font.SourceSans
 NoclipButton.Text = "Noclip"
 NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 NoclipButton.TextSize = 14
 self.buttons.NoclipButton = NoclipButton

 WalkSpeedInput.FocusLost:Connect(function()
 local value = tonumber(WalkSpeedInput.Text)
 if value and value >= 0 and value <= 1000 then
 CONFIG.WALKSPEED = value
 else
 WalkSpeedInput.Text = "16"
 self:createNotification("ZENN | Error", "Walkspeed must be 0-1000!", 3)
 end
 end)

 JumpPowerInput.FocusLost:Connect(function()
 local value = tonumber(JumpPowerInput.Text)
 if value and value >= 0 and value <= 1000 then
 CONFIG.JUMPPOWER = value
 else
 JumpPowerInput.Text = "50"
 self:createNotification("ZENN | Error", "JumpPower must be 0-1000!", 3)
 end
 end)

 FOVInput.FocusLost:Connect(function()
 local value = tonumber(FOVInput.Text)
 if value and value >= 30 and value <= 120 then
 CONFIG.FOV = value
 workspace.CurrentCamera.FieldOfView = value
 else
 FOVInput.Text = "70"
 self:createNotification("ZENN | Error", "FOV must be 30-120!", 3)
 end
 end)

 GravityInput.FocusLost:Connect(function()
 local value = tonumber(GravityInput.Text)
 if value and value >= 0 and value <= 1000 then
 CONFIG.GRAVITY = value
 workspace.Gravity = value
 else
 GravityInput.Text = "196.2"
 self:createNotification("ZENN | Error", "Gravity must be 0-1000!", 3)
 end
 end)

 ApplyButton.MouseButton1Click:Connect(function()
 local character = player.Character
 if not character then
 self:createNotification("ZENN | Error", "Character not found!", 3)
 return
 end
 isBypassActive = true
 initializeMovementInstances(character, CONFIG.METHOD)
 applyMovement(character)
 startEnforcement()
 self:createNotification("ZENN | Settings", "Walkspeed and JumpPower settings applied with bypass!", 3)
 end)

 ResetButton_2.MouseButton1Click:Connect(function()
 local character = player.Character
 if not character then
 self:createNotification("ZENN | Error", "Character not found!", 3)
 return
 end
 isBypassActive = false
 CONFIG.WALKSPEED = 16
 CONFIG.JUMPPOWER = 50
 CONFIG.METHOD = "Humanoid"
 MethodButton.Text = "Method: " .. CONFIG.METHOD
 WalkSpeedInput.Text = "16"
 JumpPowerInput.Text = "50"
 FOVInput.Text = "70"
 GravityInput.Text = "196.2"
 workspace.CurrentCamera.FieldOfView = 70
 workspace.Gravity = 196.2
 local humanoid = character:FindFirstChild("Humanoid")
 if humanoid then
 humanoid.WalkSpeed = 16
 humanoid.JumpPower = 50
 end
 if bodyVelocity then bodyVelocity:Destroy(); bodyVelocity = nil end
 if linearVelocity then linearVelocity:Destroy(); linearVelocity = nil end
 if rocketPropulsion then rocketPropulsion:Destroy(); rocketPropulsion = nil end
 if forceField then forceField:Destroy(); forceField = nil end
 self:createNotification("ZENN | Settings", "Settings reset to defaults (Walkspeed and JumpPower)!", 3)
 end)

 MethodButton.MouseButton1Click:Connect(function()
 local methods = {"Humanoid", "BodyVelocity", "LinearVelocity", "CFrame", "RocketPropulsion", "ForceFieldVelocity"}
 local currentIndex = 1
 for i, m in ipairs(methods) do
 if m == CONFIG.METHOD then
 currentIndex = i
 break
 end
 end
 currentIndex = currentIndex % #methods + 1
 CONFIG.METHOD = methods[currentIndex]
 MethodButton.Text = "Method: " .. CONFIG.METHOD
 self:createNotification("ZENN | Debug", "Switched to method: " .. CONFIG.METHOD .. " (Index: " .. currentIndex .. ")", 3)
 if isBypassActive and player.Character then
 initializeMovementInstances(player.Character, CONFIG.METHOD)
 applyMovement(player.Character)
 end
 end)

 DetectAntiCheatButton.MouseButton1Click:Connect(function()
 local results = "Anti-Cheat Detection Results:\n"
 local character = player.Character
 local humanoid = character and character:FindFirstChild("Humanoid")
 local rootPart = character and character:FindFirstChild("HumanoidRootPart")
 local camera = workspace.CurrentCamera

 local originalWalkSpeed = humanoid and humanoid.WalkSpeed or 16
 local testWalkSpeed = 100
 if humanoid then
 humanoid.WalkSpeed = testWalkSpeed
 task.wait(0.1)
 if humanoid.WalkSpeed ~= testWalkSpeed then
 results = results .. "❌ WalkSpeed blocked (Possible AC)\n"
 else
 results = results .. "✅ WalkSpeed allowed\n"
 humanoid.WalkSpeed = originalWalkSpeed
 end
 else
 results = results .. "❌ No Humanoid for WalkSpeed test\n"
 end

 local originalGravity = workspace.Gravity
 workspace.Gravity = 50
 task.wait(0.1)
 if workspace.Gravity ~= 50 then
 results = results .. "❌ Gravity blocked (Possible AC)\n"
 else
 results = results .. "✅ Gravity allowed\n"
 workspace.Gravity = originalGravity
 end

 local simulationTestSuccess, simulationError = pcall(function()
 sethiddenproperty(player, "SimulationRadius", math.huge)
 end)
 if not simulationTestSuccess then
 results = results .. "❌ SimRadius restricted (Possible AC)\n"
 else
 results = results .. "✅ SimRadius modifiable\n"
 end

 if not loadstring then
 results = results .. "❌ Execution restricted (Possible AC)\n"
 else
 results = results .. "✅ Execution accessible\n"
 end

 local replicationTestSuccess, replicationError = pcall(function()
 player.ReplicationFocus = workspace
 end)
 if not replicationTestSuccess then
 results = results .. "❌ RepFocus restricted (Possible AC)\n"
 else
 results = results .. "✅ RepFocus modifiable\n"
 end

 if rootPart then
 local originalVelocity = rootPart.Velocity
 rootPart.Velocity = Vector3.new(100, 0, 0)
 task.wait(0.1)
 if rootPart.Velocity.Magnitude < 50 then
 results = results .. "❌ Velocity clamped (Possible AC)\n"
 else
 results = results .. "✅ Velocity modifiable\n"
 rootPart.Velocity = originalVelocity
 end
 end

 game:GetService("StarterGui"):SetCore("SendNotification", {
 Title = "ZENN | Anti-Cheat Detection",
 Text = results,
 Duration = 12
 })
 end)

 player.CharacterAdded:Connect(function(character)
 task.wait(0.5)
 if isBypassActive then
 applyMovement(character)
 end
 end)
end

-- Deobfuscator Page
function ZennLib:setupDeobfuscator()
 local Deobfuscator = self.frames.Deobfuscator
 local InputScrollFrame = Instance.new("ScrollingFrame")
 InputScrollFrame.Name = "InputScrollFrame"
 InputScrollFrame.Parent = Deobfuscator
 InputScrollFrame.BackgroundTransparency = 0.8
 InputScrollFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 InputScrollFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
 InputScrollFrame.Size = UDim2.new(0.9, 0, 0.3, 0)
 InputScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
 InputScrollFrame.ScrollBarThickness = 5
 InputScrollFrame.ScrollingDirection = Enum.ScrollingDirection.Y
 InputScrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

 local InputBox = Instance.new("TextBox")
 InputBox.Name = "InputBox"
 InputBox.Parent = InputScrollFrame
 InputBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
 InputBox.BackgroundTransparency = 0
 InputBox.Position = UDim2.new(0, 0, 0, 0)
 InputBox.Size = UDim2.new(1, -10, 1, 0)
 InputBox.Font = Enum.Font.Code
 InputBox.Text = "-- Paste obfuscated code here\n-- simple de obfuscator"
 InputBox.PlaceholderText = "-- Paste obfuscated code here"
 InputBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
 InputBox.TextColor3 = Color3.fromRGB(204, 204, 204)
 InputBox.TextSize = 12
 InputBox.TextXAlignment = Enum.TextXAlignment.Left
 InputBox.TextYAlignment = Enum.TextYAlignment.Top
 InputBox.MultiLine = true
 InputBox.ClearTextOnFocus = false
 InputBox.TextWrapped = true
 self.buttons.InputBox = InputBox

 local function updateInputCanvasSize()
 local textBounds = TextService:GetTextSize(
 InputBox.Text,
 InputBox.TextSize,
 InputBox.Font,
 Vector2.new(InputBox.AbsoluteSize.X - 10, math.huge)
 )
 InputScrollFrame.CanvasSize = UDim2.new(0, 0, 0, math.max(InputScrollFrame.Size.Y.Offset, textBounds.Y + 20))
 end

 InputBox:GetPropertyChangedSignal("Text"):Connect(updateInputCanvasSize)
 InputBox:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateInputCanvasSize)

 local OutputScrollFrame = Instance.new("ScrollingFrame")
 OutputScrollFrame.Name = "OutputScrollFrame"
 OutputScrollFrame.Parent = Deobfuscator
 OutputScrollFrame.BackgroundTransparency = 0.8
 OutputScrollFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 OutputScrollFrame.Position = UDim2.new(0.05, 0, 0.40, 0)
 OutputScrollFrame.Size = UDim2.new(0.9, 0, 0.3, 0)
 OutputScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
 OutputScrollFrame.ScrollBarThickness = 5
 OutputScrollFrame.ScrollingDirection = Enum.ScrollingDirection.Y
 OutputScrollFrame.Vertical ScrollBarInset = Enum.ScrollBarInset.ScrollBar

 local OutputBox = Instance.new("TextBox")
 OutputBox.Name = "OutputBox"
 OutputBox.Parent = OutputScrollFrame
 OutputBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
 OutputBox.BackgroundTransparency = 0
 OutputBox.Position = UDim2.new(0, 0, 0, 0)
 OutputBox.Size = UDim2.new(1, -10, 1, 0)
 OutputBox.Font = Enum.Font.Code
 OutputBox.Text = "-- Deobfuscated code will appear here"
 OutputBox.TextColor3 = Color3.fromRGB(204, 204, 204)
 OutputBox.TextSize = 12
 OutputBox.TextXAlignment = Enum.TextXAlignment.Left
 OutputBox.TextYAlignment = Enum.TextYAlignment.Top
 OutputBox.MultiLine = true
 OutputBox.ClearTextOnFocus = false
 OutputBox.TextWrapped = true
 OutputBox.Active = false
 self.buttons.OutputBox = OutputBox

 local function updateOutputCanvasSize()
 local textBounds = TextService:GetTextSize(
 OutputBox.Text,
 OutputBox.TextSize,
 OutputBox.Font,
 Vector2.new(OutputBox.AbsoluteSize.X - 10, math.huge)
 )
 OutputScrollFrame.CanvasSize = UDim2.new(0, 0, 0, math.max(OutputScrollFrame.Size.Y.Offset, textBounds.Y + 20))
 end

 OutputBox:GetPropertyChangedSignal("Text"):Connect(function()
 RunService.Heartbeat:Wait()
 updateOutputCanvasSize()
 end)
 OutputBox:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateOutputCanvasSize)

 local ToggleEditButton = Instance.new("TextButton")
 ToggleEditButton.Name = "ToggleEditButton"
 ToggleEditButton.Parent = Deobfuscator
 ToggleEditButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 ToggleEditButton.BackgroundTransparency = 0.5
 ToggleEditButton.Position = UDim2.new(0.80, 0, 0.75, 0)
 ToggleEditButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 ToggleEditButton.Font = Enum.Font.SourceSans
 ToggleEditButton.Text = "Toggle Edit"
 ToggleEditButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 ToggleEditButton.TextSize = 14
 self.buttons.ToggleEditButton = ToggleEditButton

 local isOutputEditable = false
 ToggleEditButton.MouseButton1Click:Connect(function()
 isOutputEditable = not isOutputEditable
 OutputBox.Active = isOutputEditable
 ToggleEditButton.Text = isOutputEditable and "Disable Edit" or "Toggle Edit"
 game:GetService("StarterGui"):SetCore("SendNotification", {
 Title = "ZENN | Deobfuscator",
 Text = "Output box " .. (isOutputEditable and "enabled" or "disabled") .. " for editing!",
 Duration = 3
 })
 end)

 local DeobfuscateButton = Instance.new("TextButton")
 DeobfuscateButton.Name = "DeobfuscateButton"
 DeobfuscateButton.Parent = Deobfuscator
 DeobfuscateButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 DeobfuscateButton.BackgroundTransparency = 0.5
 DeobfuscateButton.Position = UDim2.new(0.05, 0, 0.75, 0)
 DeobfuscateButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 DeobfuscateButton.Font = Enum.Font.SourceSans
 DeobfuscateButton.Text = "De-code"
 DeobfuscateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 DeobfuscateButton.TextSize = 14
 self.buttons.DeobfuscateButton = DeobfuscateButton

 local CopyButton = Instance.new("TextButton")
 CopyButton.Name = "CopyButton"
 CopyButton.Parent = Deobfuscator
 CopyButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 CopyButton.BackgroundTransparency = 0.5
 CopyButton.Position = UDim2.new(0.33, 0, 0.75, 0)
 CopyButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
 CopyButton.Font = Enum.Font.SourceSans
 CopyButton.Text = "Copy"
 CopyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 CopyButton.TextSize = 14
 self.buttons.CopyButton = CopyButton

 local ClearButton = Instance.new("TextButton")
 ClearButton.Name = "ClearButton"
 ClearButton.Parent = Deobfuscator
 ClearButton.BackgroundColor3
    ClearButton.BackgroundTransparency = 0.5
    ClearButton.Position = UDim2.new(0.60, 0, 0.75, 0)
    ClearButton.Size = UDim2.new(0, 60 * self.config.uiScale, 0, 20)
    ClearButton.Font = Enum.Font.SourceSans
    ClearButton.Text = "Clear"
    ClearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ClearButton.TextSize = 14
    self.buttons.ClearButton = ClearButton

    DeobfuscateButton.MouseButton1Click:Connect(function()
        local code = InputBox.Text
        if code == "" or code == "-- Paste obfuscated code here\n-- simple de obfuscator" then
            self:createNotification("ZENN | Error", "Please enter code to deobfuscate!", 3)
            return
        end
        local deobfuscated = self:deobfuscate(code)
        OutputBox.Text = deobfuscated
        updateOutputCanvasSize()
        self:createNotification("ZENN | Deobfuscator", "Code deobfuscated successfully!", 3)
    end)

    CopyButton.MouseButton1Click:Connect(function()
        local success, err = pcall(function()
            setclipboard(OutputBox.Text)
        end)
        if success then
            self:createNotification("ZENN | Success", "Deobfuscated code copied to clipboard!", 3)
        else
            self:createNotification("ZENN | Error", "Failed to copy code to clipboard!", 3)
            warn("Clipboard set failed: " .. tostring(err))
        end
    end)

    ClearButton.MouseButton1Click:Connect(function()
        InputBox.Text = "-- Paste obfuscated code here\n-- simple de obfuscator"
        OutputBox.Text = "-- Deobfuscated code will appear here"
        updateInputCanvasSize()
        updateOutputCanvasSize()
        self:createNotification("ZENN | Deobfuscator", "Input and output cleared!", 3)
    end)
end

-- Deobfuscation Function
function ZennLib:deobfuscate(code)
    local function cleanCode(str)
        str = str:gsub("\n+", "\n"):gsub("%s%s+", " ")
        str = str:gsub("--[^\n]*", "")
        str = str:gsub("%[=*%[.-%]=*%]", function(s) return (#s > 1000) and "" or s end)
        return str
    end

    local function simplifyExpressions(str)
        str = str:gsub("(%b())", function(expr)
            return expr:gsub("%s+", "")
        end)
        str = str:gsub("(%d+)%s*([%+%-%*/])%s*(%d+)", function(a, op, b)
            local num1, num2 = tonumber(a), tonumber(b)
            if not (num1 and num2) then return a .. op .. b end
            if op == "+" then return tostring(num1 + num2)
            elseif op == "-" then return tostring(num1 - num2)
            elseif op == "*" then return tostring(num1 * num2)
            elseif op == "/" and num2 ~= 0 then return tostring(num1 / num2)
            end
            return a .. op .. b
        end)
        return str
    end

    local function removeJunk(str)
        str = str:gsub("_[%w_]+%s*=%s*_[%w_]+", "")
        str = str:gsub("do%s*end", "")
        str = str:gsub("local%s+_%s*=%s*[^;]+;", "")
        return str
    end

    local deobfuscated = code
    deobfuscated = cleanCode(deobfuscated)
    deobfuscated = simplifyExpressions(deobfuscated)
    deobfuscated = removeJunk(deobfuscated)
    deobfuscated = deobfuscated:gsub("%s*\n%s*\n+", "\n"):gsub("^%s+", ""):gsub("%s+$", "")
    return deobfuscated
end

-- Syntax Highlighting
function ZennLib:createHighlight(source, name, color)
    local highlight = Instance.new("TextLabel")
    highlight.Name = name
    highlight.Parent = source.Parent
    highlight.BackgroundTransparency = 1
    highlight.Size = source.Size
    highlight.Position = source.Position
    highlight.Font = Enum.Font.Code
    highlight.TextColor3 = color
    highlight.TextSize = 12
    highlight.TextXAlignment = Enum.TextXAlignment.Left
    highlight.TextYAlignment = Enum.TextYAlignment.Top
    highlight.Text = ""
    highlight.TextWrapped = true
    highlight.ZIndex = source.ZIndex + 1
    return highlight
end

function ZennLib:highlightSource(source, lines, comments, globals, keywords, remote, strings, tokens, numbers)
    local text = source.Text
    local lineCount = select(2, text:gsub("\n", "\n")) + 1
    lines.Text = table.concat({table.unpack({1}, 1, lineCount)}, "\n")

    local function escapePattern(str)
        return str:gsub("([%(%)%.%%%+%-%*%?%[%^%$%]])", "%%%1")
    end

    local function highlightPattern(pattern, colorLabel, replacement)
        local highlighted = ""
        local lastPos = 1
        for start, match, finish in text:gmatch("()(" .. pattern .. ")()") do
            highlighted = highlighted .. text:sub(lastPos, start - 1) .. replacement(match)
            lastPos = finish
        end
        highlighted = highlighted .. text:sub(lastPos)
        colorLabel.Text = highlighted
    end

    comments.Text = ""
    globals.Text = ""
    keywords.Text = ""
    remote.Text = ""
    strings.Text = ""
    tokens.Text = ""
    numbers.Text = ""

    highlightPattern("%-%-[^\n]*", comments, function(match) return match end)
    highlightPattern("%f[%w](getfenv|setfenv|loadstring|pcall|xpcall|rawset|rawget|type|select|tostring|tonumber|pairs|ipairs|next|unpack|rawequal|assert|error|require|game|workspace|script|shared|Player|Players|Instance|Vector3|CFrame|UDim2|Color3|math|table|string|os|debug|coroutine|spawn|wait|delay|tick|time|print|warn|game:GetService%s*%(.-%)|%w+%s*:%s*%w+)%f[%W]", globals, function(match) return match end)
    highlightPattern("%f[%w](local|function|if|then|else|elseif|end|while|do|for|in|break|return|nil|true|false|and|or|not)%f[%W]", keywords, function(match) return match end)
    highlightPattern("%f[%w](RemoteEvent|RemoteFunction|FireServer|InvokeServer|FireClient|InvokeClient)%f[%W]", remote, function(match) return match end)
    highlightPattern('".-"' .. "|" .. "'.-'" .. "|" .. "%[=*%[.-%]=*%]", strings, function(match) return match end)
    highlightPattern("[%(%)%[%]{}%.,;:=<>%+%-%*/%%^#|&~!]", tokens, function(match) return match end)
    highlightPattern("%f[%d]%d+%.?%d*[%w_]*%f[%D]", numbers, function(match) return match end)
end

-- Anti-Ban Mechanisms
function ZennLib:setupAntiBan()
    local originalNamecall
    originalNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
        local method = getnamecallmethod()
        if method == "Kick" or method == "Ban" then
            self:createNotification("ZENN | Anti-Ban", "Blocked a kick/ban attempt!", 3)
            return
        elseif method == "FireServer" and tostring(self):find("AntiCheat") then
            self:createNotification("ZENN | Anti-Ban", "Blocked suspicious RemoteEvent: " .. tostring(self), 3)
            return
        end
        return originalNamecall(self, ...)
    end))

    local originalIndex
    originalIndex = hookmetamethod(game, "__index", newcclosure(function(self, key)
        if key == "WalkSpeed" or key == "JumpPower" then
            return originalIndex(self, key)
        end
        return originalIndex(self, key)
    end))

    local function scrambleString(str)
        local scrambled = ""
        for i = 1, #str do
            scrambled = scrambled .. string.char(math.random(65, 90))
        end
        return scrambled
    end

    local originalEnvironment = getfenv()
    local newEnvironment = setmetatable({}, {
        __index = function(_, key)
            if key == "script" or key == "shared" then
                return nil
            end
            return originalEnvironment[key]
        end
    })
    self.executeEnvironment = newEnvironment
end

-- Utility Functions
function ZennLib:HSVToRGB(h, s, v)
    local r, g, b
    local i = math.floor(h * 6)
    local f = h * 6 - i
    local p = v * (1 - s)
    local q = v * (1 - f * s)
    local t = v * (1 - (1 - f) * s)
    i = i % 6
    if i == 0 then r, g, b = v, t, p
    elseif i == 1 then r, g, b = q, v, p
    elseif i == 2 then r, g, b = p, v, t
    elseif i == 3 then r, g, b = p, q, v
    elseif i == 4 then r, g, b = t, p, v
    elseif i == 5 then r, g, b = v, p, q
    end
    return r, g, b
end

function ZennLib:formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = seconds % 60
    return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

function ZennLib:animatePopup()
    if not self.isAuthenticated then
        self:createNotification("ZENN | Error", "Please authenticate first!", 3)
        return
    end
    self.isOpen = not self.isOpen
    local ZENN = self.mainGui:FindFirstChild("ZENN")
    if not ZENN then return end
    local tweenInfo = TweenInfo.new(self.config.animationSpeed, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out)
    local targetSize = self.isOpen and UDim2.new(0, 348 * self.config.uiScale, 0, 193 * self.config.uiScale) or UDim2.new(0, 0, 0, 0)
    local targetPos = self.isOpen and UDim2.new(0.10, 0, 0.10, 0) or UDim2.new(0.5, 0, 0.5, 0)
    ZENN.Visible = true
    local tween = TweenService:Create(ZENN, tweenInfo, {Size = targetSize, Position = targetPos})
    tween:Play()
    if not self.isOpen then
        tween.Completed:Connect(function()
            ZENN.Visible = false
        end)
    end
end

function ZennLib:applyUICorners()
    local function applyCorner(instance, radius)
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, radius or self.config.cornerRadius)
        corner.Parent = instance
    end
    applyCorner(self.mainGui.ZENN, self.config.cornerRadius)
    applyCorner(self.mainGui.ZENN.MainFrame, self.config.cornerRadius)
    applyCorner(self.passwordScreen, self.config.cornerRadius)
    applyCorner(self.passwordScreen.PasswordMainFrame, self.config.cornerRadius)
    applyCorner(self.toggleButton, 8)
    for _, frame in pairs(self.frames) do
        applyCorner(frame, 5)
    end
    for _, button in pairs(self.buttons) do
        applyCorner(button, 5)
    end
end

-- Example Script (BlackHoleLua)
local BlackHoleLua = [[
local function createBlackHole(position)
    local part = Instance.new("Part")
    part.Position = position
    part.Size = Vector3.new(5, 5, 5)
    part.Anchored = true
    part.CanCollide = false
    part.BrickColor = BrickColor.new("Really black")
    part.Material = Enum.Material.Neon
    part.Shape = Enum.PartType.Ball
    part.Parent = workspace
    local effect = Instance.new("ParticleEmitter")
    effect.Texture = "rbxassetid://243098098"
    effect.Size = NumberSequence.new(1)
    effect.Lifetime = NumberRange.new(1, 2)
    effect.Rate = 50
    effect.Parent = part
    for _, player in pairs(game.Players:GetPlayers()) do
        local char = player.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root and (root.Position - position).Magnitude < 20 then
                root.Velocity = (position - root.Position).Unit * 50
            end
        end
    end
    wait(5)
    part:Destroy()
end
createBlackHole(Vector3.new(0, 10, 0))
]]

-- Return the Library
return ZennLib
